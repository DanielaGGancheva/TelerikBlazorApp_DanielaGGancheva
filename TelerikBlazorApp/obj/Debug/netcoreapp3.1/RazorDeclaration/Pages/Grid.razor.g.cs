#pragma checksum "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\Pages\Grid.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "67ddf5b02b3e7168f02f66ed4c40161c793fff33"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TelerikBlazorApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using TelerikBlazorApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using TelerikBlazorApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Telerik.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\_Imports.razor"
using Telerik.Blazor.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\Pages\Grid.razor"
using TelerikBlazorApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\Pages\Grid.razor"
using TelerikBlazorApp.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/grid")]
    public partial class Grid : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 58 "C:\Progress\TelerikBlazorApp\TelerikBlazorApp\Pages\Grid.razor"
       
    List<WeatherForecast> forecasts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetForecasts();
    }

    async Task GetForecasts()
    {
        forecasts = await ForecastService.GetForecastListAsync(DateTime.Now);
    }

    // Sample CUD operations below that call a service
    // they also update the local view data - this is required when the grid data is not tied
    // directly to an IQueriable that fetches from an EF context (possible only in server blazor)
    // this sample uses the item from the grid immediately, but in a real app
    // you may return an updated/inserted/deleted item data from the service and use that instead
    // or add code to fetch all the grid data anew (which might be a performance hit but for data that updates often may be helpful)

    public async Task DeleteHandler(GridCommandEventArgs args)
    {
        WeatherForecast currItem = args.Item as WeatherForecast;

        await ForecastService.DeleteForecastAsync(currItem);

        // update the view data
        forecasts.Remove(currItem);
    }

    public async Task CreateHandler(GridCommandEventArgs args)
    {
        WeatherForecast currItem = args.Item as WeatherForecast;

        await ForecastService.InsertForecastAsync(currItem);

        // update the view data
        currItem.Id = forecasts.Count + 1;
        forecasts.Insert(0, currItem);
    }

    public async Task UpdateHandler(GridCommandEventArgs args)
    {
        WeatherForecast currItem = args.Item as WeatherForecast;

        await ForecastService.UpdateForecastAsync(currItem);

        // update the view data
        var matchingItem = forecasts.FirstOrDefault(c => c.Id == currItem.Id);
        if (matchingItem != null)
        {
            matchingItem.Summary = currItem.Summary;
            matchingItem.TemperatureC = currItem.TemperatureC;
            matchingItem.Date = currItem.Date;
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private WeatherForecastService ForecastService { get; set; }
    }
}
#pragma warning restore 1591
